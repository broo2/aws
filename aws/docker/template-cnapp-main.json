{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"Build a VPC and shared resources stack for CASHNet - main template - based on AWS PCI template",

    "Metadata":{
        "AWS::CloudFormation::Interface":{
            "ParameterGroups":[
                {
                    "Label":{
                        "default":"General Configuration:"
                    },
                    "Parameters":[
                        "pEnvironmentTagValue",
                        "pAppStackName",
                        "pEnvironmentSize",
                        "pEC2KeyPair",
                        "pMgmtVPNFlag",
                        "pAzureCNAppCIDR"
                    ]
                },
                {
                    "Label":{
                        "default":"Network Configuration:"
                    },
                    "Parameters":[
                        "pAppStackSeq",
                        "pWebceWAFPort",
                        "pWebceHttpWAFPort",
                        "pWebauthWAFPort",
                        "pUseCiscoCSR",
                        "pPublicAccessFlag"
                    ]
                },
                {
                    "Label":{
                        "default":"Application Configuration:"
                    },
                    "Parameters":[
                        "pCashnetHost",
                        "pWebAppUser",
                        "pWebAppPassword",
                        "pBatchAppUser",
                        "pBatchAppPassword",
                        "pCommerceCertARN",
                        "pWebauthCertARN",
                        "pOLPostOperator",
                        "pOLPostOperatorPassword",
                        "pOLPostServiceIndicator"
                    ]
                },
                {
                    "Label":{
                        "default":"PR Database Configuration:"
                    },
                    "Parameters":[
                        "pAGListener",
                        "pDBAppUser",
                        "pDBAppPassword",
                        "pDBTypeKey",
                        "pProdDBName",
                        "pTrainDBName"
                    ]
                },
                {
                    "Label":{
                        "default":"ST Database Configuration:"
                    },
                    "Parameters":[
                        "pSTAGListener",
                        "pSTDBUser",
                        "pSTDBPassword",
                        "pSTDBName",
                        "pAutorunUser",
                        "pAutorunPassword"
                    ]
                },
                {
                    "Label":{
                        "default":"Docker Configuration:"
                    },
                    "Parameters":[
                        "pUseDocker",
                        "pDockerWorkerInstanceType",
                        "pDockerWorkerMinInstances",
                        "pDockerWorkerMaxInstances",
						"pKongPGDatabaseG",
						"pKongPGDatabaseI",
						"pKongPGUser",
						"pKongPGPassword",
						"pRegionAZ3Name"

                    ]
                }
            ],
            "ParameterLabels":{
                "pEnvironmentTagValue":{
                    "default":"Enviornment Name"
                },
                "pAppStackName":{
                    "default":"App Stack Name"
                },
                "pEnvironmentSize":{
                    "default":"Environment Size"
                },
                "pDBTypeKey":{
                    "default":"Database Type Key (PROD or TRAIN)"
                },
                "pDBAppUser":{
                    "default":"User for Database Access"
                },
                "pDBAppPassword":{
                    "default":"Database User Password"
                },
                "pWebAppUser":{
                    "default":"User for Web App Pools"
                },
                "pWebAppPassword":{
                    "default":"Web App Pool User Password"
                },
                "pBatchAppUser":{
                    "default":"User for Batch Application"
                },
                "pBatchAppPassword":{
                    "default":"Batch Application User Password"
                },
                "pAutorunUser":{
                    "default":"User for Autorun Database"
                },
                "pAutorunPassword":{
                    "default":"Autorun Database User Password"
                },
                "pEC2KeyPair":{
                    "default":"Existing SSH Key for Other Instances"
                },
                "pAppStackSeq":{
                    "default":"Sequence Number"
                },
                "pAGListener":{
                    "default":"PR Database AG Listener DNS Name"
                },
                "pSTAGListener":{
                    "default":"ST Database AG Listener DNS Name"
                },
                "pProdDBName":{
                    "default":"Production Database Name"
                },
                "pTrainDBName":{
                    "default":"Training Database Name"
                },
                "pSTDBName":{
                    "default":"State Database Name"
                },
                "pCommerceCertARN":{
                    "default":"WebCE Certificate ARN"
                },
                "pWebauthCertARN":{
                    "default":"Webauth Certificate ARN"
                },
                "pWebceWAFPort":{
                    "default":"WAF Port for WebCE"
                },
                "pWebceHttpWAFPort":{
                    "default":"WAF Port for WebCE HTTP traffic"
                },
                "pWebauthWAFPort":{
                    "default":"WAF Port for Webauth"
                },
                "pOLPostOperator":{
                    "default":"CASHNet Operator for Online Posting Service"
                },
                "pOLPostOperatorPassword":{
                    "default":"CASHNet Password for Online Posting Service"
                },
                "pOLPostServiceIndicator":{
                    "default":"Service Indicator for Online Posting Service"
                },
                "pCashnetHost":{
                    "default":"CASHNet Website URL"
                },
                "pUseCiscoCSR":{
                    "default":"Route through Cisco CSR"
                },
                "pPublicAccessFlag":{
                    "default":"Allow Public Access to Websites"
                },
                "pUseDocker":{
                    "default":"Install the Docker system in this environment?"
                },
                "pDockerWorkerMinInstances":{
                    "default":"Minimum number of instances for DockerWorker servers"
                },
                "pDockerWorkerMaxInstances":{
                    "default":"Maximum number of instances for DockerWorker servers"
                },
                "pDockerWorkerInstanceType":{
                    "default":"Instance type: (t2.micro, t2.medium, etc)"
                },
                "pAzureVPNFlag": {
                  "default" : "Setup Routes for Azure VPN?"
                },
                "pAzureCNAppCIDR": {
                  "default": "Azure CNApp CIDR"
                },
				"vpcID": {
				"Fn::GetAtt": ["ProductionVpcTemplate", "Outputs.rVPCProduction"]
				},
				"pKongPGDatabaseG":{
                    "default":"Postgres DB Name for Docker CASHNet G"
                },
				"pKongPGDatabaseI":{
                    "default":"Postgres DB Name for Docker CASHNet I"
                },
				"pKongPGPassword":{
                    "default":"Postgres user password for Docker"
                },
				"pKongPGUser":{
                    "default":"Postgres usermame for Docker"
                },
				"pRegionAZ3Name":{
					"default" : "Description of 3rd AZ for DockerMaster HA"}
	            }
        },
        "Stack":{
            "Value":"0"
        },
        "VersionDate":{
            "Value":"20160925"
        },
        "Identifier":{
            "Value":"template-cnapp-main"
        },
        "Input":{
            "Description":"CASHNet App Stack: Input of all required parameters in nested stacks"
        },
        "Output":{
            "Description":"N/A"
        }
    },

    "Parameters":{
        "pEnvironmentTagValue":{
            "Description":"The environment such as PROD, BCP, SWdev, or ITops",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pAppStackName":{
            "Description":"The environment such as cnprod, cntrain",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pEnvironmentSize":{
            "Description":"The size of the environment to build",
            "Type":"String",
            "Default":"Minimal",
            "AllowedValues":[
                "Production",
                "Train",
                "Minimal",
                "MTTEST",
                "QA"
            ]
        },
        "pDBTypeKey":{
            "Description":"Database type key (PROD or TRAIN)",
            "Type":"String",
            "Default":"PROD",
            "AllowedValues":[
                "PROD",
                "TRAIN"
            ]
        },
        "pDBAppUser":{
            "Description":"Pre-Existing SQL user for the application",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pDBAppPassword":{
            "Description":"Mixed alphanumeric and must be between 8 and 28 characters and contain at least one capital letter",
            "NoEcho":true,
            "Type":"String",
            "MinLength":8,
            "MaxLength":28
        },
        "pWebAppUser":{
            "Description":"Pre-Existing AD User for Web App Pools as DOMAIN\\user",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pWebAppPassword":{
            "Description":"Mixed alphanumeric and must be between 8 and 28 characters and contain at least one capital letter",
            "NoEcho":true,
            "Type":"String",
            "MinLength":8,
            "MaxLength":28
        },
        "pBatchAppUser":{
            "Description":"Pre-Existing AD User for Batch Application as DOMAIN\\user",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pBatchAppPassword":{
            "Description":"Mixed alphanumeric and must be between 8 and 28 characters and contain at least one capital letter",
            "NoEcho":true,
            "Type":"String",
            "MinLength":8,
            "MaxLength":28
        },
        "pSTDBUser":{
            "Description":"Pre-Existing SQL user for the session state database ",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pSTDBPassword":{
            "Description":"Mixed alphanumeric and must be between 8 and 28 characters and contain at least one capital letter",
            "NoEcho":true,
            "Type":"String",
            "MinLength":8,
            "MaxLength":28
        },
        "pAutorunUser":{
            "Description":"Pre-Existing SQL user for the autorun utility databases",
            "Type":"String",
            "MinLength":3,
            "MaxLength":28
        },
        "pAutorunPassword":{
            "Description":"Mixed alphanumeric and must be between 8 and 28 characters and contain at least one capital letter",
            "NoEcho":true,
            "Type":"String",
            "MinLength":8,
            "MaxLength":28
        },
        "pEC2KeyPair":{
            "Description":"The SSH key pair in your account to use for all other EC2 instance logins",
            "Type":"AWS::EC2::KeyPair::KeyName"
        },
        "pAppStackSeq":{
            "Description":"Specify a one digit number to be used to build the third octet of IP addresses for this app stack.  (First two octets will be based on the VPC, third octet will be 1XY where this value is X)",
            "Type":"Number",
            "MinValue":"0",
            "MaxValue":"9",
            "ConstraintDescription":"must be a valid number between 0 and 9."
        },
        "pAGListener":{
            "Description":"Enter the DNS name of the Availability Group listener you have already created for the SQL PR database",
            "Type":"String",
            "Default":"sqlpr00"
        },
        "pProdDBName":{
            "Description":"Enter the name of the CASHNet production database",
            "Type":"String",
            "Default":"cashnet_prod"
        },
        "pTrainDBName":{
            "Description":"Enter the name of the CASHNet training database",
            "Type":"String",
            "Default":"cashnet_train"
        },
        "pSTAGListener":{
            "Description":"Enter the DNS name of the Availability Group listener you have already created for the SQL ST database",
            "Type":"String",
            "Default":"sqlst00"
        },
        "pSTDBName":{
            "Description":"Enter the name of the SQL Session State database",
            "Type":"String",
            "Default":"SessionStateDB"
        },
        "pCommerceCertARN":{
            "Description":"Enter the Amazon Certificate Manager ARN for the commerce.cashnet.com certificate to use",
            "Type":"String"
        },
        "pWebauthCertARN":{
            "Description":"Enter the Amazon Certificate Manager ARN for the webauth.cashnet.com certificate to use",
            "Type":"String"
        },
        "pWebceWAFPort":{
            "Description":"Enter the Port on which the WAF will accept connections for WebCE",
            "Type":"Number",
            "MinValue":"8001",
            "MaxValue":"8099",
            "ConstraintDescription":"must be a valid number between 8001 and 8099."
        },
        "pWebceHttpWAFPort":{
            "Description":"Enter the Port on which the WAF will accept HTTP connections for WebCE for redirect to HTTPS",
            "Type":"Number",
            "MinValue":"8001",
            "MaxValue":"8099",
            "ConstraintDescription":"must be a valid number between 8001 and 8099."
        },
        "pWebauthWAFPort":{
            "Description":"Enter the Port on which the WAF will accept connections for Webauth",
            "Type":"Number",
            "MinValue":"8001",
            "MaxValue":"8099",
            "ConstraintDescription":"must be a valid number between 8001 and 8099."
        },
        "pOLPostOperator":{
            "Description":"Enter the CASHNet Operator ID that should be used to run the online posting service",
            "Type":"String"
        },
        "pOLPostOperatorPassword":{
            "Description":"Enter the password for the CASHNet Operator ID that will run the online posting service",
            "NoEcho":true,
            "Type":"String"
        },
        "pOLPostServiceIndicator":{
            "Description":"Enter the Service Indicator for the online posting service",
            "Type":"String",
            "Default":"A",
            "MinLength":1,
            "MaxLength":1,
            "ConstraintDescription":"Must be one character only"
        },
        "pCashnetHost":{
            "Description":"Enter the hostname for the CASHNet website, such as commerce.cashnet.com or train.cashnet.com",
            "Type":"String"
        },
        "pUseCiscoCSR":{
            "Description":"Choose true to route outbound traffic through the Cisco CSR or false to route it through an AWS NAT Gateway",
            "AllowedValues":[
                "true",
                "false"
            ],
            "Type":"String"
        },
        "pAzureVPNFlag": {
          "Description": "Should this stack have routes to Azure VPN? ",
          "Type": "String",
          "AllowedValues": ["true", "false"]
        },
        "pAzureCNAppCIDR": {
          "Description": "Enter Azure CNApp CIDR to all Access to AWS SQL, if any.  If not using Azure, enter something fake like \"1.1.1.1/32\".",
          "Type": "String",
          "MinLength" : "1"
        },
        "pPublicAccessFlag":{
            "Description":"Choose true to allow public access to websites or false to restrict to predefined permitted IP addresses",
            "AllowedValues":[
                "true",
                "false"
            ],
            "Default":"false",
            "Type":"String"
        },
        "pWindowsIISAMI":{
            "Type":"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default":"AMI-Windows2012-IIS"
        },
        "pWindowsAMI":{
            "Type":"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default":"AMI-Windows2012"
        },
        "pLinuxAMI":{
            "Type":"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
            "Default":"AMI-AmazonLinux"
        },
        "pDockerWorkerMinInstances":{
            "Description":"Minimum number of instances for DockerWorker servers",
            "Type":"Number",
            "Default":"3"
        },
        "pDockerWorkerMaxInstances":{
            "Description":"Maximum number of instances for DockerWorker servers",
            "Type":"Number",
            "Default":"12"
        },
        "pDockerWorkerInstanceType":{
            "Description":"Instance type: (t2.micro, t2.medium, etc)",
            "Type":"String",
            "Default":"t2.medium"
        },
        "pUseDocker":{
            "Description":"Should we build the docker environment?",
            "Type":"String",
            "AllowedValues":[
                "true",
                "false"
            ],
            "Default":"false"
        },

		"pKongPGDatabaseG" :{
            "Description":"Postgres database used for this docker Enviornment",
            "Type":"String",
			"Default":"cashnetg"
			},
		"pKongPGDatabaseI" :{
            "Description":"Postgres database used for this docker Enviornment",
            "Type":"String",
			"Default":"cashneti"
			},
		"pKongPGPassword":{
            "Description":"Postgres database password for this docker Enviornment",
            "NoEcho":true,
			"Type":"String",
			"Default":"password1234"
			},
		"pKongPGUser":{
            "Description":"Postgres database user for this docker Enviornment",
            "Type":"String",
			"Default":"cn_postgres_admin"
        },

		"pRegionAZ3Name": {
                "Description": "Availability Zone 3",
                "Type": "AWS::EC2::AvailabilityZone::Name",
				"Default":"Availability Zone 3"
        }

    },

	"Conditions" : {
		"cBuildDocker":{ "Fn::Equals":[ { "Ref":"pUseDocker" }, "true" ] }
	},

    "Mappings":{
        "CustomVariables":{
            "vTemplateNickName":{
                "Value":"CNAPP"
            },
            "vTemplateUrlPrefix":{
                "Value":"https://s3.amazonaws.com/cf-templates-cashnet/cnapp-stack/latest/"
            },
            "vResourceEnvironmentTagKey":{
                "Value":"Environment"
            }
        },
        "SizingMap":{
            "Production":{
                "webInstanceType":"c4.large",
                "404InstanceType":"c4.large",
                "webMinInstances":4,
                "webMaxInstances":6,
                "miscInstanceType":"m4.large",
                "miscMinInstances":2,
                "miscMaxInstances":2,
				"jobInstanceType":"m4.large",
                "jobMinInstances":2,
                "jobMaxInstances":2,
                "tomcatInstanceType":"m4.large",
                "tomcatMinInstances":2,
                "tomcatMaxInstances":2
            },
            "Train":{
                "webInstanceType":"c4.large",
                "404InstanceType":"c4.large",
                "webMinInstances":2,
                "webMaxInstances":2,
                "miscInstanceType":"m4.large",
                "miscMinInstances":2,
                "miscMaxInstances":2,
				"jobInstanceType":"m4.large",
                "jobMinInstances":1,
                "jobMaxInstances":1,
                "tomcatInstanceType":"m4.large",
                "tomcatMinInstances":2,
                "tomcatMaxInstances":2
            },
            "MTTEST":{
                "webInstanceType":"t2.micro",
                "404InstanceType":"t2.micro",
                "webMinInstances":1,
                "webMaxInstances":1,
                "miscInstanceType":"t2.micro",
                "miscMinInstances":1,
                "miscMaxInstances":1,
				"jobInstanceType":"t2.micro",
                "jobMinInstances":1,
                "jobMaxInstances":1,
                "tomcatInstanceType":"t2.large",
                "tomcatMinInstances":1,
                "tomcatMaxInstances":1
            },
            "QA":{
                "webInstanceType":"c4.large",
                "404InstanceType":"c4.large",
                "webMinInstances":2,
                "webMaxInstances":2,
                "miscInstanceType":"t2.medium",
                "miscMinInstances":2,
                "miscMaxInstances":2,
				"jobInstanceType":"t2.medium",
                "jobMinInstances":1,
                "jobMaxInstances":1,
                "tomcatInstanceType":"t2.large",
                "tomcatMinInstances":2,
                "tomcatMaxInstances":2
            },
            "Minimal":{
                "webInstanceType":"t2.micro",
                "404InstanceType":"t2.micro",
                "webMinInstances":1,
                "webMaxInstances":1,
                "miscInstanceType":"t2.micro",
                "miscMinInstances":1,
                "miscMaxInstances":1,
				"jobInstanceType":"t2.micro",
                "jobMinInstances":1,
                "jobMaxInstances":1,
                "tomcatInstanceType":"t2.large",
                "tomcatMinInstances":1,
                "tomcatMaxInstances":1
            }
        }
    },

    "Resources":{

		"AppNetworkTemlate":{
            "Type":"AWS::CloudFormation::Stack",
            "Properties":{
                "TemplateURL":{
                    "Fn::Join":[
                        "",
                        [
                            {
                                "Fn::FindInMap":[
                                    "CustomVariables",
                                    "vTemplateUrlPrefix",
                                    "Value"
                                ]
                            },
                            "templates/template-cnapp-network.json"
                        ]
                    ]
                },
                "TimeoutInMinutes":"20",
                "Parameters":{
                    "pFriendlyName":{
                        "Fn::Join":[
                            "-",
                            [
                                {
                                    "Ref":"pEnvironmentTagValue"
                                },
                                {
                                    "Ref":"pAppStackName"
                                }
                            ]
                        ]
                    },
                    "pSubnetACIDR":{
                        "Fn::Join":[
                            "",
                            [
                                "10.",
                                {   "Fn::ImportValue":{   "Fn::Sub":"${pEnvironmentTagValue}:SecondOctet"  }  },
                                ".1",
                                {    "Ref":"pAppStackSeq"  },
                                "0.0/24"
                            ]
                        ]
                    },
                    "pSubnetBCIDR":{
                        "Fn::Join":[
                            "",
                            [  "10.",
                                { "Fn::ImportValue":{ "Fn::Sub":"${pEnvironmentTagValue}:SecondOctet" }},
                                ".1",
                                { "Ref":"pAppStackSeq" },
                                "1.0/24"
                            ]
                        ]
                    },
					"pSubnetCCIDR":{
                        "Fn::Join":[
                            "",
                            [  "10.",
								{ "Fn::ImportValue":{ "Fn::Sub":"${pEnvironmentTagValue}:SecondOctet" }},
								".1",
								{ "Ref":"pAppStackSeq" },
								"2.0/24"
                            ]
                        ]
                    },
                    "pEnvironment":{
                        "Ref":"pEnvironmentTagValue"
                    },
                    "pAppStackName":{
                        "Ref":"pAppStackName"
                    },
                    "pUseCiscoCSR":{
                        "Ref":"pUseCiscoCSR"
                    },
					"pUseDocker":{
                        "Ref":"pUseDocker"
                    },
					"pRegionAZ3Name": {
						"Ref":"pRegionAZ3Name"
					}

                }
            }
        },

        "AppApplicationTemlate":{
            "Type":"AWS::CloudFormation::Stack",
            "DependsOn":[
                "AppNetworkTemlate"
            ],
            "Properties":{
                "TemplateURL":{
                    "Fn::Join":[
                        "",
                        [
                            {
                                "Fn::FindInMap":[
                                    "CustomVariables",
                                    "vTemplateUrlPrefix",
                                    "Value"
                                ]
                            },
                            "templates/template-cnapp-application.json"
                        ]
                    ]
                },
                "TimeoutInMinutes":"20",
                "Parameters":{
                    "pEnvironment":{
                        "Ref":"pEnvironmentTagValue"
                    },
                    "pAppStackName":{
                        "Ref":"pAppStackName"
                    },
                    "pFriendlyName":{
                        "Fn::Join":[
                            "-",
                            [
                                {
                                    "Ref":"pEnvironmentTagValue"
                                },
                                {
                                    "Ref":"pAppStackName"
                                }
                            ]
                        ]
                    },
                    "pProductionVPC":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:VPCID"
                        }
                    },
                    "pSubnetA":{
                        "Fn::GetAtt":[
                            "AppNetworkTemlate",
                            "Outputs.rSubnetA"
                        ]
                    },
                    "pSubnetB":{
                        "Fn::GetAtt":[
                            "AppNetworkTemlate",
                            "Outputs.rSubnetB"
                        ]
                    },

                    "pRegionAZ1Name":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:AvailabilityZoneA"
                        }
                    },
                    "pRegionAZ2Name":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:AvailabilityZoneB"
                        }
                    },
                    "pDomainName":{
                        "Fn::Join":[
                            ".",
                            [
                                {
                                    "Ref":"pEnvironmentTagValue"
                                },
                                "cashnet.pvt"
                            ]
                        ]
                    },
                    "pDBTypeKey":{
                        "Ref":"pDBTypeKey"
                    },
                    "pEC2KeyPair":{
                        "Ref":"pEC2KeyPair"
                    },
                    "pWebInstanceType":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "webInstanceType"
                        ]
                    },
                    "p404InstanceType":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "404InstanceType"
                        ]
                    },
                    "pWebMinInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "webMinInstances"
                        ]
                    },
                    "pWebMaxInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "webMaxInstances"
                        ]
                    },
                    "pMiscInstanceType":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "miscInstanceType"
                        ]
                    },
                    "pMiscMinInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "miscMinInstances"
                        ]
                    },
                    "pMiscMaxInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "miscMaxInstances"
                        ]
                    },
                    "pJobInstanceType":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "jobInstanceType"
                        ]
                    },
                    "pJobMinInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "jobMinInstances"
                        ]
                    },
                    "pJobMaxInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "jobMaxInstances"
                        ]
                    },
                    "pTomcatInstanceType":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "tomcatInstanceType"
                        ]
                    },
                    "pTomcatMinInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "tomcatMinInstances"
                        ]
                    },
                    "pTomcatMaxInstances":{
                        "Fn::FindInMap":[
                            "SizingMap",
                            {
                                "Ref":"pEnvironmentSize"
                            },
                            "tomcatMaxInstances"
                        ]
                    },
                    "pLinuxAMI":{
                        "Ref":"pLinuxAMI"
                    },
                    "pWindowsIISAMI":{
                        "Ref":"pWindowsIISAMI"
                    },
                    "pWindowsAMI":{
                        "Ref":"pWindowsAMI"
                    },
                    "pInstanceIAMProfile":{
                        "Fn::ImportValue":"InstanceIAMProfile"
                    },
                    "pInstanceIAMRole":{
                        "Fn::ImportValue":"InstanceIAMRole"
                    },
                    "pCodeDeployServiceRoleArn":{
                        "Fn::ImportValue":"CodeDeployServiceRoleArn"
                    },
                    "pDirectoryService":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:DirectoryService"
                        }
                    },

                    "pDBAppUser":{
                        "Ref":"pDBAppUser"
                    },
                    "pDBAppPassword":{
                        "Ref":"pDBAppPassword"
                    },

                    "pSTDBUser":{
                        "Ref":"pSTDBUser"
                    },
                    "pSTDBPassword":{
                        "Ref":"pSTDBPassword"
                    },
                    "pAutorunUser":{
                        "Ref":"pAutorunUser"
                    },
                    "pAutorunPassword":{
                        "Ref":"pAutorunPassword"
                    },
                    "pWebAppUser":{
                        "Ref":"pWebAppUser"
                    },
                    "pWebAppPassword":{
                        "Ref":"pWebAppPassword"
                    },
                    "pBatchAppUser":{
                        "Ref":"pBatchAppUser"
                    },
                    "pBatchAppPassword":{
                        "Ref":"pBatchAppPassword"
                    },

                    "pAGListener":{
                        "Ref":"pAGListener"
                    },

                    "pSTAGListener":{
                        "Ref":"pSTAGListener"
                    },

                    "pProdDBName":{
                        "Ref":"pProdDBName"
                    },

                    "pTrainDBName":{
                        "Ref":"pTrainDBName"
                    },
                    "pSTDBName":{
                        "Ref":"pSTDBName"
                    },
                    "pCommerceCertARN":{
                        "Ref":"pCommerceCertARN"
                    },
                    "pWebauthCertARN":{
                        "Ref":"pWebauthCertARN"
                    },
                    "pEnvironmentType":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:EnvironmentType"
                        }
                    },
                    "pWebceWAFPort":{
                        "Ref":"pWebceWAFPort"
                    },
                    "pWebceHttpWAFPort":{
                        "Ref":"pWebceHttpWAFPort"
                    },
                    "pWebauthWAFPort":{
                        "Ref":"pWebauthWAFPort"
                    },
                    "pOLPostOperator":{
                        "Ref":"pOLPostOperator"
                    },
                    "pOLPostOperatorPassword":{
                        "Ref":"pOLPostOperatorPassword"
                    },
                    "pOLPostServiceIndicator":{
                        "Ref":"pOLPostServiceIndicator"
                    },
                    "pCashnetHost":{
                        "Ref":"pCashnetHost"
                    },
                    "pPublicAccessFlag":{
                        "Ref":"pPublicAccessFlag"
                    },
                    "pAzureVPNFlag": { "Ref": "pAzureVPNFlag" },
                    "pAzureCNAppCIDR": { "Ref": "pAzureCNAppCIDR" }
                }
            }
        },

        "AppDockerTemlate":{
            "Type":"AWS::CloudFormation::Stack",
			"Condition":"cBuildDocker",
            "DependsOn":[
                "AppNetworkTemlate",
                "AppApplicationTemlate"
            ],
            "Properties":{
                "TemplateURL":{
                    "Fn::Join":[
                        "",
                        [
                            {
                                "Fn::FindInMap":[
                                    "CustomVariables",
                                    "vTemplateUrlPrefix",
                                    "Value"
                                ]
                            },
                            "templates/template-cnapp-docker.json"
                        ]
                    ]
                },
                "TimeoutInMinutes":"20",
                "Parameters":{
                    "pEnvironment":{
                        "Ref":"pEnvironmentTagValue"
                    },
                    "pAppStackName":{
                        "Ref":"pAppStackName"
                    },
                    "pFriendlyName":{
                        "Fn::Join":[
                            "-",
                            [
                                {
                                    "Ref":"pEnvironmentTagValue"
                                },
                                {
                                    "Ref":"pAppStackName"
                                }
                            ]
                        ]
                    },
                    "pProductionVPC":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:VPCID"
                        }
                    },
                    "pSubnetA":{
                        "Fn::GetAtt":[
                            "AppNetworkTemlate",
                            "Outputs.rSubnetA"
                        ]
                    },
                    "pSubnetB":{
                        "Fn::GetAtt":[
                            "AppNetworkTemlate",
                            "Outputs.rSubnetB"
                        ]
                    },
					         "pSubnetC":{
                        "Fn::GetAtt":[
                            "AppNetworkTemlate",
                            "Outputs.rSubnetC"
                        ]
                     },
                    "pRegionAZ1Name":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:AvailabilityZoneA"
                        }
                    },
                   "pRegionAZ2Name":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:AvailabilityZoneB"
                        }
                     },
					          "pRegionAZ3Name":{
                        "Ref":"pRegionAZ3Name"
                     },
                    "pDomainName":{
                        "Fn::Join":[
                            ".",
                            [
                                {
                                    "Ref":"pEnvironmentTagValue"
                                },
                                "cashnet.pvt"
                            ]
                        ]
                    },
                    "pDBTypeKey":{
                        "Ref":"pDBTypeKey"
                    },
                    "pEC2KeyPair":{
                        "Ref":"pEC2KeyPair"
                    },
                    "pLinuxAMI":{
                        "Ref":"pLinuxAMI"
                    },
                    "pInstanceIAMProfile":{
                        "Fn::ImportValue":"InstanceIAMProfile"
                    },
                    "pInstanceIAMRole":{
                        "Fn::ImportValue":"InstanceIAMRole"
                    },
                    "pAGListener":{
                        "Ref":"pAGListener"
						                },
                    "pProdDBName":{
                        "Ref":"pProdDBName"
						                },
					          "pTrainDBName":{
						             "Ref":"pTrainDBName"
						                 },
                    "pDBAppUser":{
                        "Ref":"pDBAppUser"
						          },
                    "pDBAppPassword":{
                        "Ref":"pDBAppPassword"
						          },
                    "pDockerWorkerMinInstances":{
                        "Ref":"pDockerWorkerMinInstances"
						          },
                    "pDockerWorkerMaxInstances":{
                        "Ref":"pDockerWorkerMaxInstances"
                      },
					          "pDockerWorkerInstanceType":{
                        "Ref":"pDockerWorkerInstanceType"
                      },
					          "pKongPGDatabaseG":{
                        "Ref":"pKongPGDatabaseG"
						          },
					          "pKongPGDatabaseI":{
                        "Ref":"pKongPGDatabaseI"
						          },
					           "pKongPGPassword":{
                        "Ref":"pKongPGPassword"
						          },
					          "pKongPGUser":{
                        "Ref":"pKongPGUser"
						          },

                    "pSGcndotnetcode":{
                        "Fn::GetAtt":[
                            "AppApplicationTemlate",
                            "Outputs.rSGcndotnetcode"
                        ]
                      },
                    "pSGwebceELB":{
                        "Fn::GetAtt":[
                            "AppApplicationTemlate",
                            "Outputs.rSGwebceELB"
                        ]
                      },
                    "pALBwebceListenerHttp":{
                        "Fn::GetAtt":[
                            "AppApplicationTemlate",
                            "Outputs.rALBwebceListenerHttp"
                        ]
                      },
					         "pAnsibleIP":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:AnsibleIP"
                        }
                      },
					          "pEnvironmentType":{
                        "Fn::ImportValue":{
                            "Fn::Sub":"${pEnvironmentTagValue}:EnvironmentType"
                        }
                      },
                    "pWebAppUser":{
                        "Ref":"pWebAppUser"
                      },
                    "pWebAppPassword":{
                        "Ref":"pWebAppPassword"
                      }
                }
            }
        }
    },

    "Outputs":{
        "TemplateType":{
            "Value":"Standard Multi-Tier Web Application"
        },
        "TemplateVersion":{
            "Value":"2.0"
        }
    }
}
